# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FoIgHdp82I5i4Wq67ofTw2dGFGFCUVJr
"""

import statistics

# Função para calcular IMC
def calcula_imc(peso=70, altura=1.75):
    return peso / (altura ** 2)

# Lista de alturas
alturas = [45, 23, 67, 12, 11, 89, 23, 41, 50, 62, 78, 34, 56, 19, 72, 88, 11, 90, 39, 65, 76, 27, 48, 59, 81, 14, 11,

            93, 3, 68, 29, 52, 74, 16, 85, 20, 55, 38, 69, 11, 83, 7, 44, 61, 18, 96, 22, 58, 31, 71, 40, 53, 87, 31]

# Funções padrão do Python
def calcular_estatisticas(lista):
    return {
        "Maior valor": max(lista),
        "Menor valor": min(lista),
        "Soma dos valores": sum(lista),
        "Valor absoluto de -25": abs(-25),
        "Número 3.14159 arredondado para 2 casas decimais": round(3.14159, 2),
        "Média": round(statistics.mean(lista), 2),
        "Mediana": statistics.median(lista),
        "Moda": statistics.mode(lista),
        "Variância da amostra": round(statistics.variance(lista), 2),
        "Desvio padrão da amostra": round(statistics.stdev(lista), 2)
    }

# Exibir estatísticas
estatisticas = calcular_estatisticas(alturas)
for chave, valor in estatisticas.items():
    print(f"{chave}: {valor}")

# Exemplo de cálculo de IMC
print(f"\nIMC calculado: {calcula_imc():.2f}")

import numpy as np

# Função para gerar matrizes aleatórias
def gerar_matrizes():
    return {
        "Matriz 5x10 de floats (0 a 1)": np.random.rand(5, 10),
        "Matriz 8x4 de inteiros (0 a 9)": np.random.randint(0, 10, (8, 4))
    }

# Exibir matrizes
matrizes = gerar_matrizes()
for chave, matriz in matrizes.items():
    print(f"{chave}:\n{matriz}\n")